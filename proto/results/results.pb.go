//
// Copyright 2021 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: results.proto

// Package results defines a data structure for output results from models-ci.

package results

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PyangOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*PyangMessage        `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PyangOutput) Reset() {
	*x = PyangOutput{}
	mi := &file_results_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PyangOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PyangOutput) ProtoMessage() {}

func (x *PyangOutput) ProtoReflect() protoreflect.Message {
	mi := &file_results_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PyangOutput.ProtoReflect.Descriptor instead.
func (*PyangOutput) Descriptor() ([]byte, []int) {
	return file_results_proto_rawDescGZIP(), []int{0}
}

func (x *PyangOutput) GetMessages() []*PyangMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

// PyangMessage represents a parsed output from pyang
//
//	This is parsed using the option
//	--msg-template='messages:{{path:"{file}" line:{line} code:"{code}" type:"{type}" level:{level} message:'"'{msg}'}}"
//
// Reference: https://github.com/mbj4668/pyang/blob/master/bin/pyang
type PyangMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Line          uint32                 `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Level         uint32                 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PyangMessage) Reset() {
	*x = PyangMessage{}
	mi := &file_results_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PyangMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PyangMessage) ProtoMessage() {}

func (x *PyangMessage) ProtoReflect() protoreflect.Message {
	mi := &file_results_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PyangMessage.ProtoReflect.Descriptor instead.
func (*PyangMessage) Descriptor() ([]byte, []int) {
	return file_results_proto_rawDescGZIP(), []int{1}
}

func (x *PyangMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PyangMessage) GetLine() uint32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *PyangMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PyangMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PyangMessage) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PyangMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_results_proto protoreflect.FileDescriptor

const file_results_proto_rawDesc = "" +
	"\n" +
	"\rresults.proto\x12\aresults\"@\n" +
	"\vPyangOutput\x121\n" +
	"\bmessages\x18\x01 \x03(\v2\x15.results.PyangMessageR\bmessages\"\x8e\x01\n" +
	"\fPyangMessage\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04line\x18\x02 \x01(\rR\x04line\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x14\n" +
	"\x05level\x18\x05 \x01(\rR\x05level\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessageB/Z-github.com/openconfig/models-ci/proto/resultsb\x06proto3"

var (
	file_results_proto_rawDescOnce sync.Once
	file_results_proto_rawDescData []byte
)

func file_results_proto_rawDescGZIP() []byte {
	file_results_proto_rawDescOnce.Do(func() {
		file_results_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_results_proto_rawDesc), len(file_results_proto_rawDesc)))
	})
	return file_results_proto_rawDescData
}

var file_results_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_results_proto_goTypes = []any{
	(*PyangOutput)(nil),  // 0: results.PyangOutput
	(*PyangMessage)(nil), // 1: results.PyangMessage
}
var file_results_proto_depIdxs = []int32{
	1, // 0: results.PyangOutput.messages:type_name -> results.PyangMessage
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_results_proto_init() }
func file_results_proto_init() {
	if File_results_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_results_proto_rawDesc), len(file_results_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_results_proto_goTypes,
		DependencyIndexes: file_results_proto_depIdxs,
		MessageInfos:      file_results_proto_msgTypes,
	}.Build()
	File_results_proto = out.File
	file_results_proto_goTypes = nil
	file_results_proto_depIdxs = nil
}
